[{"/Users/User/Downloads/Celestial/client/src/index.js":"1","/Users/User/Downloads/Celestial/client/src/reportWebVitals.js":"2","/Users/User/Downloads/Celestial/client/src/App.js":"3","/Users/User/Downloads/Celestial/client/src/reducers/index.js":"4","/Users/User/Downloads/Celestial/client/src/styles.js":"5","/Users/User/Downloads/Celestial/client/src/components/Form/Form.js":"6","/Users/User/Downloads/Celestial/client/src/reducers/posts.js":"7","/Users/User/Downloads/Celestial/client/src/components/Form/styles.js":"8","/Users/User/Downloads/Celestial/client/src/actions/posts.js":"9","/Users/User/Downloads/Celestial/client/src/constants/actionTypes.js":"10","/Users/User/Downloads/Celestial/client/src/api/index.js":"11","/Users/User/Downloads/Celestial/client/src/components/Posts/styles.js":"12","/Users/User/Downloads/Celestial/client/src/components/Posts/Post.js":"13"},{"size":1014,"mtime":1632555243691,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1631624597544,"results":"16","hashOfConfig":"15"},{"size":1441,"mtime":1632661870741,"results":"17","hashOfConfig":"15"},{"size":124,"mtime":1631624597544,"results":"18","hashOfConfig":"15"},{"size":351,"mtime":1631624597544,"results":"19","hashOfConfig":"15"},{"size":2236,"mtime":1631797129475,"results":"20","hashOfConfig":"15"},{"size":619,"mtime":1632400633568,"results":"21","hashOfConfig":"15"},{"size":426,"mtime":1631624597543,"results":"22","hashOfConfig":"15"},{"size":978,"mtime":1632556416249,"results":"23","hashOfConfig":"15"},{"size":162,"mtime":1631624597543,"results":"24","hashOfConfig":"15"},{"size":406,"mtime":1632555535625,"results":"25","hashOfConfig":"15"},{"size":963,"mtime":1631799249280,"results":"26","hashOfConfig":"15"},{"size":1964,"mtime":1632659759965,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"17zz7i3",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},"/Users/User/Downloads/Celestial/client/src/index.js",[],["58","59"],"/Users/User/Downloads/Celestial/client/src/reportWebVitals.js",[],"/Users/User/Downloads/Celestial/client/src/App.js",[],"/Users/User/Downloads/Celestial/client/src/reducers/index.js",[],"/Users/User/Downloads/Celestial/client/src/styles.js",[],"/Users/User/Downloads/Celestial/client/src/components/Form/Form.js",["60"],"import { Button, Paper, TextField, Typography } from '@material-ui/core';\nimport React, { useState, useEffect} from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport useStyles from './styles';\n\nimport { createPost, updatePost } from '../../actions/posts';\n\nconst Form = ({currentId, setCurrentId}) => {\n\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const [postData, setPostData] = useState({creator: '', title: '', description: '', tags: '', });\n\n    const clear = () => {\n        setCurrentId(0);\n        setPostData({ creator: '', title: '', description: '', tags: ''})\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        if (currentId === 0) {\n            dispatch(createPost(postData));\n            clear();\n\n        } \n        else {\n            dispatch(updatePost(currentId, postData));\n            clear();\n        }\n    }\n\n  \n\n    return (\n       <Paper className={classes.paper}>\n           <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n                <Typography variant=\"h6\"> Make new memory</Typography>\n                <TextField name=\"creator\" variant=\"outlined\" label=\"Creator\" fullWidth value={postData.creator} onChange={(e) => setPostData({ ...postData, creator: e.target.value})} /> \n                <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({...postData, title: e.target.value})} /> \n                <TextField name=\"description\" variant=\"outlined\" label=\"Description\" fullWidth value={postData.description} onChange={(e) => setPostData({ ...postData, description: e.target.value })} /> \n                <TextField name=\"tags\" variant=\"outlined\" label=\"Tags\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value })} /> \n\n                <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth> Submit </Button>\n                <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth> Clear </Button>          \n           </form>\n       </Paper>\n    )\n}\n\nexport default Form\n\n","/Users/User/Downloads/Celestial/client/src/reducers/posts.js",[],"/Users/User/Downloads/Celestial/client/src/components/Form/styles.js",[],"/Users/User/Downloads/Celestial/client/src/actions/posts.js",["61","62"],"import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\n\nimport * as api from '../api/index';\n\nexport const createPost = (post) => async (dispatch) => {\n    try {\n        const { data } = await api.createPost(post);\n        dispatch({ type: CREATE, payload: data });\n    } catch (error) {\n        console.log(error.message)\n    }\n};\n\nexport const updatePost = (post) => async (dispatch) => {\n    try {\n        const { data } = await api.updatePost(post);\n        dispatch({ type: UPDATE, payload: data });\n    } catch (error) {\n        console.log(error.message)\n    }\n};\n\nexport const getPosts = () => async (dispatch) => {\n    try {\n        const data = await api.fetchPosts();\n        // const {dataInObject} = await api.fetchPosts();\n        console.log('data', data);\n        // console.log('dataInObject', dataInObject);\n\n        dispatch({ type: FETCH_ALL, payload: data})\n    } catch (error) {\n        console.log(error.message)\n    }\n};\n\n\n\n\n","/Users/User/Downloads/Celestial/client/src/constants/actionTypes.js",[],"/Users/User/Downloads/Celestial/client/src/api/index.js",[],"/Users/User/Downloads/Celestial/client/src/components/Posts/styles.js",[],"/Users/User/Downloads/Celestial/client/src/components/Posts/Post.js",["63","64","65"],"import React from 'react'\nimport { Card, Typography, Button, CardContent, CardActions } from '@material-ui/core';\nimport moment from 'moment';\n\n// import MoreHoriz from '@material-ui/icons/MoreHoriz';\n\nimport { useDispatch } from 'react-redux';\nimport useStyles from './styles';\n\n\nconst Post = ({ post, setCurrentId}) => {\n    const dispatch = useDispatch(); \n    const classes = useStyles();   \n\n    console.log('post', post);\n    console.log('helllooooo');\n\n    return (\n        <Card className={classes.card}>\n            <div className= {classes.overlay}>\n                <Typography variant=\"h6\"> {post.creator} </Typography>\n                {/* <Typography variant=\"body2\" color=\"initial\">{moment(post.createdAt).fromNow()}</Typography> */}\n            </div>\n            <div className={classes.overlay2}>\n                 {/* <Button style={{ color: 'white' }} size=\"small\" onClick={() => setCurrentId(post._id)}> <MoreHoriz fontSize=\"default\"/> </Button> */}\n            </div>\n\n             <div className={classes.details}>\n                 {/* <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\"> {post.tags.map((tag) => `#${tag} `)} </Typography> */}\n             </div>\n                 <Typography className={classes.title} gutterBottom variant=\"h5\" component=\"h2\">{post.title}</Typography>\n                 <CardContent>\n                   <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{post.message}</Typography>\n                 </CardContent>\n                 <CardActions className={classes.cardActions}>\n                   {/* <Button size=\"small\" color=\"primary\" onClick={() => dispatch(likePost(post._id))}><ThumbUpAltIcon fontSize=\"small\" /> Like {post.likeCount} </Button>\n                   <Button size=\"small\" color=\"primary\" onClick={() => dispatch(deletePost(post._id))}><DeleteIcon fontSize=\"small\" /> Delete</Button> */}\n                 </CardActions>\n        </Card>   \n    )\n\n}\n\nexport default Post",{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":2,"column":27,"nodeType":"72","messageId":"73","endLine":2,"endColumn":36},{"ruleId":"70","severity":1,"message":"74","line":1,"column":37,"nodeType":"72","messageId":"73","endLine":1,"endColumn":43},{"ruleId":"70","severity":1,"message":"75","line":1,"column":45,"nodeType":"72","messageId":"73","endLine":1,"endColumn":49},{"ruleId":"70","severity":1,"message":"76","line":2,"column":28,"nodeType":"72","messageId":"73","endLine":2,"endColumn":34},{"ruleId":"70","severity":1,"message":"77","line":3,"column":8,"nodeType":"72","messageId":"73","endLine":3,"endColumn":14},{"ruleId":"70","severity":1,"message":"78","line":12,"column":11,"nodeType":"72","messageId":"73","endLine":12,"endColumn":19},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'DELETE' is defined but never used.","'LIKE' is defined but never used.","'Button' is defined but never used.","'moment' is defined but never used.","'dispatch' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]